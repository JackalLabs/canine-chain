syntax = "proto3";
package canine_chain.filetree;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "canine_chain/filetree/params.proto";
import "canine_chain/filetree/files.proto";
import "canine_chain/filetree/pubkey.proto";

option go_package = "github.com/jackalLabs/canine-chain/x/filetree/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jackaldao/canine/filetree/params";
  }

  // Queries a Files by index.
  rpc Files(QueryFileRequest) returns (QueryFileResponse) {
    option (google.api.http).get =
        "/jackal-dao/canine-chain/filetree/files/{address}/{ownerAddress}";
  }

  // Queries a list of Files items.
  rpc FilesAllByOwner(QueryAllFilesByOwnerRequest) returns (QueryAllFilesResponse) {
    option (google.api.http).get = "/jackal-dao/canine-chain/filetree/files/{owner}";
  }

  // Queries a list of Files items.
  rpc FilesAll(QueryAllFilesRequest) returns (QueryAllFilesResponse) {
    option (google.api.http).get = "/jackal-dao/canine-chain/filetree/files";
  }

  // Queries a Pubkey by index.
  rpc Pubkey(QueryPubkeyRequest) returns (QueryPubkeyResponse) {
    option (google.api.http).get =
        "/jackal-dao/canine-chain/filetree/pubkeys/{address}";
  }

  // Queries a list of Pubkey items.
  rpc PubkeyAll(QueryAllPubkeysRequest) returns (QueryAllPubkeysResponse) {
    option (google.api.http).get = "/jackal-dao/canine-chain/filetree/pubkeys";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryFileRequest {
  string address = 1;
  string ownerAddress = 2;
}

message QueryFileResponse { Files files = 1 [ (gogoproto.nullable) = false ]; }

message QueryAllFilesByOwnerRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string owner = 2;
}

message QueryAllFilesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFilesResponse {
  repeated Files files = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryPubkeyRequest { string address = 1; }

message QueryPubkeyResponse {
  Pubkey pubkey = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllPubkeysRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPubkeysResponse {
  repeated Pubkey pubkey = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
