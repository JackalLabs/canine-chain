syntax = "proto3";
package jackaldao.canine.rns;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "canine-chain/rns/params.proto";
import "canine-chain/rns/whois.proto";
import "canine-chain/rns/names.proto";
import "canine-chain/rns/bids.proto";
import "canine-chain/rns/forsale.proto";
import "canine-chain/rns/init.proto";

option go_package = "github.com/jackal-dao/canine/x/rns/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jackal-dao/canine/rnsparams";
  }

// Queries a Name by index.
	rpc Names(QueryGetNamesRequest) returns (QueryGetNamesResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsnames/{index}";
	}

	// Queries a list of Names.
	rpc NamesAll(QueryAllNamesRequest) returns (QueryAllNamesResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsnames";
	}

// Queries a Bid by index.
	rpc Bids(QueryGetBidsRequest) returns (QueryGetBidsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsbids/{index}";
	}

	// Queries a list of Bids.
	rpc BidsAll(QueryAllBidsRequest) returns (QueryAllBidsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsbids";
	}

// Queries a Listing by index.
	rpc Forsale(QueryGetForsaleRequest) returns (QueryGetForsaleResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsforsale/{name}";
	}

	// Queries all Listings.
	rpc ForsaleAll(QueryAllForsaleRequest) returns (QueryAllForsaleResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rnsforsale";
	}

// Queries a Init by index.
	rpc Init(QueryGetInitRequest) returns (QueryGetInitResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rns/init/{address}";
	}

	// Queries a list of Init items.
	rpc InitAll(QueryAllInitRequest) returns (QueryAllInitResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rns/init";
	}

// Queries a list of ListOwnedNames items.
	rpc ListOwnedNames(QueryListOwnedNamesRequest) returns (QueryListOwnedNamesResponse) {
		option (google.api.http).get = "/jackal-dao/canine/rns/list_owned_names/{address}";
	}

}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetWhoisRequest {
	  string index = 1;

}

message QueryGetWhoisResponse {
	Whois whois = 1 [(gogoproto.nullable) = false];
}

message QueryAllWhoisRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWhoisResponse {
	repeated Whois whois = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetNamesRequest {
	  string index = 1;

}

message QueryGetNamesResponse {
	Names names = 1 [(gogoproto.nullable) = false];
}

message QueryAllNamesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNamesResponse {
	repeated Names names = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBidsRequest {
	  string index = 1;

}

message QueryGetBidsResponse {
	Bids bids = 1 [(gogoproto.nullable) = false];
}

message QueryAllBidsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBidsResponse {
	repeated Bids bids = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetForsaleRequest {
	  string name = 1;

}

message QueryGetForsaleResponse {
	Forsale forsale = 1 [(gogoproto.nullable) = false];
}

message QueryAllForsaleRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllForsaleResponse {
	repeated Forsale forsale = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetInitRequest {
	  string address = 1;

}

message QueryGetInitResponse {
	bool init = 1;
}

message QueryAllInitRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInitResponse {
	repeated Init init = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListOwnedNamesRequest {
  string address = 1;
cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListOwnedNamesResponse {
  repeated Names names = 1 [(gogoproto.nullable) = false];
cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

